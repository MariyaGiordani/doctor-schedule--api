// <auto-generated />
using APICore.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APICore.Migrations
{
    [DbContext(typeof(DbConnectionProvider))]
    partial class DbConnectionProviderModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APICore.Models.Doctor", b =>
                {
                    b.Property<decimal>("Cpf")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)))
                        .HasColumnName("CPF")
                        .HasColumnType("NUMERIC(11,0)");

                    b.Property<int>("Crm")
                        .HasColumnName("CRM")
                        .HasMaxLength(6);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(70);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FIRST_NAME")
                        .HasMaxLength(30);

                    b.Property<int>("Id")
                        .HasColumnName("USER_ID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LAST_NAME")
                        .HasMaxLength(70);

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnName("SPECIALITY")
                        .HasMaxLength(39);

                    b.HasKey("Cpf");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("M_DOCTOR");
                });

            modelBuilder.Entity("APICore.Models.Patient", b =>
                {
                    b.Property<decimal>("Cpf")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)))
                        .HasColumnName("CPF")
                        .HasColumnType("NUMERIC(11,0)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(70);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FIRST_NAME")
                        .HasMaxLength(30);

                    b.Property<int>("Id")
                        .HasColumnName("USER_ID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LAST_NAME")
                        .HasMaxLength(70);

                    b.HasKey("Cpf");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("P_PATIENT");
                });

            modelBuilder.Entity("APICore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USER_ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("USER_PASSWORD")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("USER_NAME")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("U_USER");
                });

            modelBuilder.Entity("APICore.Models.Doctor", b =>
                {
                    b.HasOne("APICore.Models.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("APICore.Models.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("APICore.Models.Patient", b =>
                {
                    b.HasOne("APICore.Models.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("APICore.Models.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
